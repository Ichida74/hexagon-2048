{"version":3,"sources":["data/servers.js","components/menu.js","components/status.js","components/game.js","data/statuses.js","services/movement.js","App.js","reportWebVitals.js","index.js"],"names":["servers","id","value","Menu","props","level","changeLevel","server","setServer","levels","i","push","className","onClick","process","changeServer","useCallback","event","target","onChange","map","eServer","index","Status","status","data-status","title","Game","cells","columns","x","column","currentCells","filter","cell","y","cellInColumn","z","currentCell","find","data-value","data-x","data-y","data-z","Math","abs","statuses","roundSelect","showArea","playing","gameOver","networkUnavailable","move","firstAxis","secondAxis","thirdAxis","newCells","hasMoved","currentColumn","secondAxisMax","secondAxisCurrent","row","thirdAxisCurrent","currentCellIndex","findIndex","splice","downSecondAxis","downCellIndex","concat","useEventListener","eventName","handler","element","window","savedHandler","useRef","useEffect","current","addEventListener","eventListener","removeEventListener","App","useState","setLevel","setStatus","setCells","cellsCount","setCellsCount","startGame","newLevel","sendRequest","afterMove","keyCode","location","hash","fetch","method","body","JSON","stringify","then","response","json","catch","length","some","filterCell","pow","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.690fc825.chunk.js","sourcesContent":["const servers = [\r\n  {\r\n    id: 'localhost',\r\n    value: 'http://localhost:13337'\r\n  },\r\n  {\r\n    id: 'server',\r\n    value: '//68f02c80-3bed-4e10-a747-4ff774ae905a.pub.instances.scw.cloud'\r\n  }\r\n]\r\n\r\nexport default servers\r\n","import React, { useCallback } from 'react'\r\nimport servers from '../data/servers'\r\n\r\nexport default function Menu (props) {\r\n  const { level, changeLevel, server, setServer } = props\r\n\r\n  const levels = []\r\n\r\n  for (let i = process.env.REACT_APP_FIRST_LEVEL; i <= process.env.REACT_APP_LAST_LEVEL; i++) {\r\n    levels.push(<button key={i} className={level === i ? 'active' : ''} onClick={() => changeLevel(i)}>{i}</button>)\r\n  }\r\n\r\n  const changeServer = useCallback((event) => {\r\n    setServer(event.target.value)\r\n  }, [server])\r\n\r\n  return (\r\n    <div className=\"menu\">\r\n      <dl className=\"menu-item\">\r\n        RNG-server url\r\n        <select id=\"url-server\" onChange={changeServer} value={server}>\r\n          {servers.map((eServer, index) => (<option\r\n            key={index}\r\n            id={eServer.id}\r\n            value={eServer.value}>\r\n              {eServer.value}\r\n          </option>))}\r\n        </select>\r\n      </dl>\r\n      <dl className=\"menu-item\">\r\n        <dt className=\"menu-title\">Select radius</dt>\r\n        <dd className=\"menu-items\">\r\n          { levels }\r\n        </dd>\r\n      </dl>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Status (props) {\r\n  const { status } = props\r\n\r\n  return (\r\n    <div className=\"status\">\r\n      Game status: <span data-status={status.title}>{status.title}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\n\r\nexport default function Game (props) {\r\n  const { level, cells } = props\r\n  const columns = []\r\n\r\n  for (let x = -level + 1; x < level; x++) {\r\n    const column = []\r\n    const currentCells = cells.filter(cell => cell.x === x)\r\n    let y = level - 1 - (x <= 0 ? 0 : x)\r\n\r\n    // Проходим по всем ячейкам в столбце\r\n    for (let cellInColumn = 0; cellInColumn < 2 * level - 1 - Math.abs(x); cellInColumn++) {\r\n      const z = 0 - x - y\r\n      const currentCell = currentCells.find(cell => cell.y === y && cell.z === z)\r\n      const value = (currentCell && currentCell.value) || 0\r\n\r\n      column.push(<div key={cellInColumn} className=\"hexagon\" data-value={value} data-x={x} data-y={y} data-z={z}>\r\n        {value ? <span className=\"value\">{value}</span> : <Fragment />}\r\n      </div>)\r\n\r\n      y--\r\n    }\r\n    columns.push(column)\r\n  }\r\n\r\n  return (\r\n    <div className={'game level-' + level}>\r\n      {columns.map((column, index) => (<div key={index} className=\"column\">{column}</div>))}\r\n    </div>\r\n  )\r\n}\r\n","const statuses = {\r\n  roundSelect: {\r\n    title: 'round-select',\r\n    showArea: false\r\n  },\r\n  playing: {\r\n    title: 'playing',\r\n    showArea: true\r\n  },\r\n  gameOver: {\r\n    title: 'game-over',\r\n    showArea: true\r\n  },\r\n  networkUnavailable: {\r\n    title: 'network-unavailable',\r\n    showArea: false\r\n  }\r\n}\r\n\r\nexport default statuses\r\n","const move = (cells, firstAxis, secondAxis, thirdAxis, level) => {\r\n  let newCells = []\r\n  let hasMoved = false\r\n\r\n  for (let currentColumn = level - 1; currentColumn > -level; currentColumn--) {\r\n    const currentCells = cells.filter(cell => cell[firstAxis] === currentColumn)\r\n    let secondAxisMax = level - 1 - (currentColumn <= 0 ? 0 : currentColumn)\r\n    let secondAxisCurrent = secondAxisMax\r\n\r\n    for (let row = 0; row < 2 * level - 1 - Math.abs(currentColumn); row++) {\r\n      const thirdAxisCurrent = 0 - currentColumn - secondAxisCurrent\r\n      const currentCellIndex = currentCells.findIndex(cell =>\r\n        cell[secondAxis] === secondAxisCurrent &&\r\n        cell[thirdAxis] === thirdAxisCurrent)\r\n\r\n      if (currentCellIndex !== -1) {\r\n        let currentCell = currentCells.splice(currentCellIndex, 1)[0]\r\n\r\n        for (let downSecondAxis = secondAxisCurrent + 1; downSecondAxis <= secondAxisMax; downSecondAxis++) {\r\n          const downCellIndex = currentCells.findIndex(cell =>\r\n            cell[secondAxis] === downSecondAxis &&\r\n            cell[thirdAxis] === 0 - currentColumn - downSecondAxis)\r\n\r\n          if (downCellIndex === -1) {\r\n            currentCell[secondAxis] = downSecondAxis\r\n            currentCell[thirdAxis] = 0 - currentColumn - downSecondAxis\r\n            hasMoved = true\r\n          } else {\r\n            if (currentCells[downCellIndex].value !== currentCell.value) {\r\n              secondAxisMax = downSecondAxis\r\n              break\r\n            }\r\n\r\n            if (currentCells[downCellIndex].value === currentCell.value) {\r\n              currentCells[downCellIndex].value *= 2\r\n              hasMoved = true\r\n              secondAxisMax = downSecondAxis - 1\r\n              currentCell = null\r\n              break\r\n            }\r\n          }\r\n        }\r\n\r\n        if (currentCell) {\r\n          currentCells.push(currentCell)\r\n        }\r\n      }\r\n\r\n      secondAxisCurrent--\r\n    }\r\n\r\n    newCells = newCells.concat(currentCells)\r\n  }\r\n\r\n  return { hasMoved, newCells }\r\n}\r\n\r\nexport default move\r\n","import React, { Fragment, useState, useEffect, useRef, useCallback } from 'react'\nimport Menu from './components/menu'\nimport Status from './components/status'\nimport Game from './components/game'\nimport servers from './data/servers'\nimport statuses from './data/statuses'\nimport move from './services/movement'\n\nfunction useEventListener (eventName, handler, element = window) {\n  const savedHandler = useRef()\n\n  useEffect(() => {\n    savedHandler.current = handler\n  }, [handler])\n\n  useEffect(\n    () => {\n      const isSupported = element && element.addEventListener\n      if (!isSupported) return\n\n      const eventListener = event => savedHandler.current(event)\n\n      element.addEventListener(eventName, eventListener)\n\n      return () => {\n        element.removeEventListener(eventName, eventListener)\n      }\n    },\n    [eventName, element]\n  )\n}\n\nfunction App () {\n  const [level, setLevel] = useState(0)\n  const [status, setStatus] = useState(statuses.roundSelect)\n  const [server, setServer] = useState(servers[1].value)\n  const [cells, setCells] = useState([])\n  const [cellsCount, setCellsCount] = useState(0)\n\n  const startGame = (newLevel) => {\n    setStatus(statuses.playing)\n    setLevel(newLevel)\n    setCells([])\n    sendRequest(server, newLevel, [])\n  }\n\n  const keyDownHandler = useCallback(\n    (event) => {\n      if (status.title === statuses.playing.title) {\n        let afterMove = null\n\n        switch (event.keyCode) {\n          case 81:\n            // q\n            afterMove = move(cells, 'z', 'y', 'x', level)\n            break\n\n          case 87:\n            // w\n            afterMove = move(cells, 'x', 'y', 'z', level)\n            break\n\n          case 69:\n            // e\n            afterMove = move(cells, 'y', 'x', 'z', level)\n            break\n\n          case 65:\n            // a\n            afterMove = move(cells, 'y', 'z', 'x', level)\n            break\n\n          case 83:\n            // s\n            afterMove = move(cells, 'x', 'z', 'y', level)\n            break\n\n          case 68:\n            // d\n            afterMove = move(cells, 'z', 'x', 'y', level)\n            break\n        }\n\n        if (afterMove && afterMove.hasMoved) {\n          setCells(afterMove.newCells)\n          sendRequest(server, level, afterMove.newCells)\n        }\n      }\n    },\n    [status, cells]\n  )\n\n  const onLoadHandler = () => {\n    switch (window.location.hash) {\n      case '#test2':\n        startGame(2)\n        break\n\n      case '#test3':\n        startGame(3)\n        break\n\n      case '$test4':\n        startGame(4)\n        break\n    }\n  }\n\n  useEventListener('keydown', keyDownHandler)\n  useEventListener('load', onLoadHandler)\n\n  const sendRequest = (server, level, cells) => {\n    fetch(server + '/' + level, {\n      method: 'POST',\n      body: JSON.stringify(cells)\n    }).then(response => response.json())\n      .then(newCells => setCells(cells.concat(newCells)))\n      .catch(() => setStatus(statuses.networkUnavailable))\n  }\n\n  // проверка на конец игры\n  useEffect(() => {\n    if (level && cells.length === cellsCount && !cells.some(cell => {\n      // находим соседей снизу и проверяем их значения\n      return cells.filter(filterCell =>\n        (filterCell.x === cell.x - 1 && filterCell.y === cell.y && filterCell.z === cell.z + 1) ||\n        (filterCell.x === cell.x && filterCell.y === cell.y - 1 && filterCell.z === cell.z + 1) ||\n        (filterCell.x === cell.x + 1 && filterCell.y === cell.y - 1 && filterCell.z === cell.z))\n        .some(filterCell => filterCell.value === cell.value)\n    })\n    ) {\n      setStatus(statuses.gameOver)\n    }\n  }, [level, cells, cellsCount])\n\n  useEffect(() => {\n    setCellsCount(3 * Math.pow(level, 2) - 3 * level + 1)\n  }, [level, setCellsCount])\n\n  return (\n    <main>\n      <Menu level={level} changeLevel={startGame} server={server} setServer={setServer} />\n      {status.showArea\n        ? <Game level={level} cells={cells} />\n        : <Fragment />}\n      <Status status={status} />\n      {status.showArea\n        ? <p><i>Use q, w, e, a, s, d keys for move</i></p>\n        : <Fragment />}\n    </main>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}